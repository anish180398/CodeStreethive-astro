---
// Import necessary components and utilities
import MainLayout from "@/layouts/MainLayout.astro";
import CardRelated from "@components/ui/cards/CardRelated.astro";
import Bookmark from "@components/ui/buttons/Bookmark.astro";
import SocialShare from "@components/ui/buttons/SocialShare.astro";
import PostFeedback from "@components/ui/feedback/PostFeedback.astro";
import { Image } from "astro:assets";
import { capitalize, formatDate } from "@utils/utils";
import { contentfulClient } from "@/lib/contentful";
import { SITE } from "@data/constants";
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';
import { BLOCKS, MARKS, INLINES } from '@contentful/rich-text-types';

// Update getStaticPaths for Contentful posts
export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries({
    content_type: "portfolios",
    locale: "en-US",
  });

  return entries.items.map((post) => ({
    params: { slug: post.fields.slug },
    props: { post },
  }));
}

// Get the current post's data
const { post } = Astro.props;


// Filter out the current post to get related posts


const pageTitle: string = `${post.fields.title} | ${SITE.title}`;
---

<MainLayout title={pageTitle}>
  <section class=" flex items-center w-full px-4 pb-12 pt-6 sm:px-6 lg:px-8 lg:pt-10">
    <div class="mx-auto max-w-5xl">
      
      <h2 class="mb-6 text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-4xl w-full text-center underline">
        {post.fields.title}
      </h2>
      <div class="mb-5 space-y-5 md:mb-8 md:space-y-8">
        <Fragment set:html={documentToHtmlString(post.fields.body as any, {
          renderNode: {
            [BLOCKS.PARAGRAPH]: (node, next) => 
              `<p class="text-pretty text-lg text-neutral-700 dark:text-neutral-300">${next(node.content)}</p>`,
            [BLOCKS.HEADING_1]: (node, next) =>
              `<h1 class="text-3xl font-bold mb-4 text-neutral-700 dark:text-neutral-300">${next(node.content)}</h1>`,
            [BLOCKS.HEADING_2]: (node, next) =>
              `<h2 class="text-2xl font-bold mb-3 text-neutral-700 dark:text-neutral-300">${next(node.content)}</h2>`,
            [BLOCKS.HEADING_3]: (node, next) =>
              `<h3 class="text-xl font-bold mb-2 text-neutral-700 dark:text-neutral-300">${next(node.content)}</h3>`,
            [BLOCKS.UL_LIST]: (node, next) =>
              `<ul class="list-disc pl-6 mb-4 text-neutral-700 dark:text-neutral-300">${next(node.content)}</ul>`,
            [BLOCKS.OL_LIST]: (node, next) =>
              `<ol class="list-decimal pl-6 mb-4 text-neutral-700 dark:text-neutral-300">${next(node.content)}</ol>`,
            [BLOCKS.LIST_ITEM]: (node, next) =>
              `<li class="mb-1 text-neutral-700 dark:text-neutral-300">${next(node.content)}</li>`,
            [BLOCKS.QUOTE]: (node, next) =>
              `<blockquote class="border-l-4 border-gray-300 pl-4 italic text-neutral-700 dark:text-neutral-300">${next(node.content)}</blockquote>`,
            [BLOCKS.EMBEDDED_ASSET]: (node, next) =>
              `<img src="${node.data.target.fields.file.url}" alt="${node.data.target.fields.file.details.image.description}" class="" />`,
          },
          renderMark: {
            [MARKS.BOLD]: (text) => `<strong>${text}</strong>`,
            [MARKS.ITALIC]: (text) => `<em>${text}</em>`,
            [MARKS.CODE]: (text) => `<code class="bg-gray-100 dark:bg-gray-800 rounded px-1">${text}</code>`,
          },
          marks: {
            [INLINES.HYPERLINK]: (node: { data: { uri: any; }; content: any; }, next: (arg0: any) => any) =>
              `<a href="${node.data.uri}" class="text-blue-600 hover:underline" target="_blank" rel="noopener noreferrer">${next(node.content)}</a>`,
          },
        })} />
      </div>
      
    </div>
   
  </section>

  
</MainLayout>
